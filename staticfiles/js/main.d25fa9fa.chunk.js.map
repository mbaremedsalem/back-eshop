{"version":3,"sources":["components/SearchBox.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/footer.js","components/rating.js","components/product.js","components/Loader.js","components/Message.js","components/Paginate.js","constants/productConstants.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","constants/cartConstants.js","actions/orderActions.js","screens/ProfileScreen.js","actions/cartActions.js","screens/CartScreen.js","components/CheckoutSteps.js","screens/PaymentScreen.js","screens/ShippingScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","reducers/cartReducers.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","keyword","setKeyword","useState","navigate","useNavigate","React","createElement","Form","onSubmit","e","preventDefault","concat","location","pathname","className","Control","type","name","onChange","target","value","placeholder","Button","variant","USER_UPDATE_PROFILE_RESET","USER_UPDATE_RESET","ORDER_CREATE_RESET","ORDER_PAY_RESET","ORDER_DELIVER_RESET","login","email","password","async","dispatch","config","headers","Content-type","data","axios","post","username","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","isAdmin","footer","Row","Col","Rating","_ref","text","color","style","product","Card","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","defaultProps","Paginate","pages","page","_keyword$split$","split","Pagination","Array","keys","map","x","key","search","active","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_RESET","listProducts","arguments","length","undefined","listTopProducts","listProductDetails","deleteProduct","createProduct","updateProduct","createProductReview","productId","review","ProductCarousel","productTopRated","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","productList","useLocation","sm","md","lg","xl","Product","ProductScreen","match","useParams","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","success","successProductReview","ListGroup","description","countInStock","xs","addToCartHandler","disabled","reviews","createdAt","substring","Group","controlId","Label","row","FormContainer","LoginScreen","setEmail","setPassword","redirect","RegisterScreen","history","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","required","createOrder","order","getOrderDetails","payOrder","paymentResult","deliverOrder","listMyOrders","listOrders","ProfileScreen","userDetails","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","Table","striped","responsive","totalPrice","isPaid","paidAt","addToCart","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod","CartScreen","Number","item","rounded","removeFromCartHandler","reduce","acc","toFixed","checkoutHandler","CheckoutSteps","step1","step2","step3","step4","PaymentScreen","shippingAddress","paymentMethod","setPaymentMethod","address","Check","label","checked","ShippingScreen","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","placeOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","show","setShow","numTel","setNumTel","motDePasse","setMotDePasse","handleClose","push","window","paypal","addPayPalScript","script","document","onload","body","appendChild","Id","href","isDelivered","deliveredAt","handleShow","justifyContent","alignItems","padding","border","background","PayPalButton","amount","onSuccess","Modal","onHide","closeButton","Footer","handleConfirm","console","log","deliverHandler","UserListScreen","userList","users","userDelete","successDelete","bordered","hover","confirm","deleteHandler","UserEditScreen","userId","params","setIsAdmin","userUpdate","errorUpdate","loadingUpdate","successUpdate","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","custom","file","files","formData","FormData","append","Content-Type","OrderListScreen","orderList","App","Router","Routes","Route","path","element","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","createRoot","getElementById","render","Provider"],"mappings":"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","file":"static/js/main.d25fa9fa.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword) {\r\n            navigate(`/?keyword=${keyword}&page=1`);\r\n        } else {\r\n            navigate(navigate.location.pathname);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} className=\"d-flex\">\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n                placeholder=\"Search...\"\r\n            ></Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","// import React from 'react'\r\n// import{ Navbar , Nav,Container} from 'react-bootstrap';\r\n// function Header() {\r\n//   return (\r\n//         <header>\r\n//           <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"collapseOnSelect\">\r\n//             <Container>\r\n//               <Navbar.Brand href=\"/\">ProShop</Navbar.Brand>\r\n//               <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n//               <Navbar.Collapse id=\"navbarScroll\">\r\n//                 <Nav className='mr-auto'>\r\n//                   <Nav.Link href=\"/cart\"><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n//                   <Nav.Link href=\"/login\"><i className='fas fa-user'></i>Login</Nav.Link>\r\n//                 </Nav>\r\n//               </Navbar.Collapse>\r\n//             </Container>\r\n//           </Navbar>\r\n//         </header>\r\n\r\n//   )\r\n// }\r\n\r\n// export default Header\r\n\r\n\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport  { Container ,Row ,Col} from 'react-bootstrap';\r\nfunction footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright @ ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport  { Card } from 'react-bootstrap';\r\nimport Rating from './rating';\r\nimport { Link } from 'react-router-dom'\r\nfunction product({product}) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n    <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} />\r\n    </Link>\r\n\r\n    <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n            <Card.Title as=\"div\">\r\n                <strong>{product.name}</strong>\r\n            </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n            <div className=\"my-3\">\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n            </div>\r\n        </Card.Text>\r\n\r\n\r\n        <Card.Text as=\"h3\">\r\n            ${product.price}\r\n        </Card.Text>\r\n    </Card.Body>\r\n</Card>    \r\n  )\r\n}\r\n\r\nexport default product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n\r\n\r\n\r\n","// import React from 'react'\r\n// import { Alert } from 'react-bootstrap'\r\n\r\n// function Message({ variant, children }) {\r\n//     return (\r\n//         <Alert variant={variant}>\r\n//             {children}\r\n//         </Alert>\r\n//     )\r\n// }\r\n\r\n\r\n// export default Message\r\n\r\n\r\nimport React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","// import React from 'react'\r\n// import { Pagination } from 'react-bootstrap'\r\n// import { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// function Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n//     if (keyword) {\r\n//         keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n//     }\r\n\r\n//     return (pages > 1 && (\r\n//         <Pagination>\r\n//             {[...Array(pages).keys()].map((x) => (\r\n//                 <LinkContainer\r\n//                     key={x + 1}\r\n//                     to={!isAdmin ?\r\n//                         `/?keyword=${keyword}&page=${x + 1}`\r\n//                         : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n//                     }\r\n//                 >\r\n//                     <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n//                 </LinkContainer>\r\n//             ))}\r\n//         </Pagination>\r\n//     )\r\n//     )\r\n// }\r\n\r\n// export default Paginate\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1]?.split('&')[0] || ''\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={{\r\n                        pathname: !isAdmin ? '/' : '/admin/productlist',\r\n                        search: `?keyword=${keyword}&page=${x + 1}`\r\n                    }}\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ))\r\n}\r\n\r\nexport default Paginate\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","// import axios from 'axios'\r\n// import {\r\n//     PRODUCT_LIST_REQUEST,\r\n//     PRODUCT_LIST_SUCCESS,\r\n//     PRODUCT_LIST_FAIL,\r\n\r\n//     PRODUCT_DETAILS_REQUEST,\r\n//     PRODUCT_DETAILS_SUCCESS,\r\n//     PRODUCT_DETAILS_FAIL,\r\n\r\n//     PRODUCT_DELETE_REQUEST,\r\n//     PRODUCT_DELETE_SUCCESS,\r\n//     PRODUCT_DELETE_FAIL,\r\n\r\n//     PRODUCT_CREATE_REQUEST,\r\n//     PRODUCT_CREATE_SUCCESS,\r\n//     PRODUCT_CREATE_FAIL,\r\n\r\n//     PRODUCT_UPDATE_REQUEST,\r\n//     PRODUCT_UPDATE_SUCCESS,\r\n//     PRODUCT_UPDATE_FAIL,\r\n\r\n//     PRODUCT_CREATE_REVIEW_REQUEST,\r\n//     PRODUCT_CREATE_REVIEW_SUCCESS,\r\n//     PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n//     PRODUCT_TOP_REQUEST,\r\n//     PRODUCT_TOP_SUCCESS,\r\n//     PRODUCT_TOP_FAIL,\r\n\r\n// } from '../constants/productConstants'\r\n\r\n\r\n// export const listProducts = (keyword = '') => async (dispatch) => {\r\n//     try {\r\n//         dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n//         const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_LIST_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_LIST_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const listTopProducts = () => async (dispatch) => {\r\n//     try {\r\n//         dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n//         const { data } = await axios.get(`/api/products/top/`)\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_TOP_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_TOP_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const listProductDetails = (id) => async (dispatch) => {\r\n//     try {\r\n//         dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n//         const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_DETAILS_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_DETAILS_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const deleteProduct = (id) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: PRODUCT_DELETE_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.delete(\r\n//             `/api/products/delete/${id}/`,\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_DELETE_SUCCESS,\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_DELETE_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// export const createProduct = () => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.post(\r\n//             `/api/products/create/`,\r\n//             {},\r\n//             config\r\n//         )\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_SUCCESS,\r\n//             payload: data,\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export const updateProduct = (product) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: PRODUCT_UPDATE_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.put(\r\n//             `/api/products/update/${product._id}/`,\r\n//             product,\r\n//             config\r\n//         )\r\n//         dispatch({\r\n//             type: PRODUCT_UPDATE_SUCCESS,\r\n//             payload: data,\r\n//         })\r\n\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_DETAILS_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_UPDATE_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REVIEW_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.post(\r\n//             `/api/products/${productId}/reviews/`,\r\n//             review,\r\n//             config\r\n//         )\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n//             payload: data,\r\n//         })\r\n\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REVIEW_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\nimport axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport  { Row ,Col} from 'react-bootstrap'\r\nimport Product from '../components/product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction HomeScreen({  }) {\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector(state => state.productList)\r\n  const { error, loading, products, page, pages } = productList\r\n\r\n//   let keyword = history.location.search\r\nconst location = useLocation();\r\nconst keyword = location.search;\r\n  useEffect(() => {\r\n      dispatch(listProducts(keyword))\r\n      \r\n  }, [dispatch, keyword])\r\n  return (\r\n    <div>\r\n    {!keyword && <ProductCarousel />}\r\n\r\n    <h1>Latest Products</h1>\r\n    {loading ? <Loader />\r\n        : error ? <Message variant='danger'>{error}</Message>\r\n            :\r\n            <div>\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate page={page} pages={pages} keyword={keyword} />\r\n            </div>\r\n    }\r\n</div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","// import React , {useState,useEffect} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import { useParams } from 'react-router-dom'\r\n// import Rating from '../components/rating'\r\n// import { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\n// import axios from 'axios'\r\n\r\n// function ProductScreen({ match }) {\r\n//     const { id } = useParams(); // Use useParams to get the id parameter\r\n//     const [product,setProduct] = useState([])\r\n\r\n//     useEffect(() => {\r\n//       async function fetchProduct(){\r\n//         const {data} = await  axios.get(`/api/products/${id}`)\r\n//         setProduct(data)\r\n//       }\r\n//       fetchProduct()\r\n  \r\n//   },\r\n\r\n//   )\r\n\r\n//   return (\r\n//     <div>\r\n   \r\n//       <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n                        \r\n//                             <Row>\r\n//                                 <Col md={6}>\r\n//                                     <Image src={product.image} alt={product.name} fluid />\r\n//                                 </Col>\r\n\r\n\r\n//                                 <Col md={3}>\r\n//                                 <ListGroup variant=\"flush\">\r\n//                                         <ListGroup.Item>\r\n//                                             <h3>{product.name}</h3>\r\n//                                         </ListGroup.Item>\r\n\r\n//                                         <ListGroup.Item>\r\n//                                             <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n//                                         </ListGroup.Item>\r\n\r\n//                                         <ListGroup.Item>\r\n//                                             Price: ${product.price}\r\n//                                         </ListGroup.Item>\r\n\r\n//                                         <ListGroup.Item>\r\n//                                             Description: {product.description}\r\n//                                         </ListGroup.Item>\r\n//                                     </ListGroup>\r\n//                                 </Col>\r\n\r\n\r\n//                                 <Col md={3}>\r\n//                                     <Card>\r\n//                                     <ListGroup variant='flush'>\r\n//                                             <ListGroup.Item>\r\n//                                                 <Row>\r\n//                                                     <Col>Price:</Col>\r\n//                                                     <Col>\r\n//                                                         <strong>${product.price}</strong>\r\n//                                                     </Col>\r\n//                                                 </Row>\r\n//                                             </ListGroup.Item>\r\n//                                             <ListGroup.Item>\r\n//                                                 <Row>\r\n//                                                     <Col>Status:</Col>\r\n//                                                     <Col>\r\n//                                                         {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n//                                                     </Col>\r\n//                                                 </Row>\r\n//                                             </ListGroup.Item>\r\n\r\n//                                             {/* {product.countInStock > 0 && (\r\n//                                                 <ListGroup.Item>\r\n//                                                     <Row>\r\n//                                                         <Col>Qty</Col>\r\n//                                                         <Col xs='auto' className='my-1'>\r\n//                                                             <Form.Control\r\n//                                                                 as=\"select\"\r\n//                                                                 value={qty}\r\n//                                                                 onChange={(e) => setQty(e.target.value)}\r\n//                                                             >\r\n//                                                                 {\r\n\r\n//                                                                     [...Array(product.countInStock).keys()].map((x) => (\r\n//                                                                         <option key={x + 1} value={x + 1}>\r\n//                                                                             {x + 1}\r\n//                                                                         </option>\r\n//                                                                     ))\r\n//                                                                 }\r\n\r\n//                                                             </Form.Control>\r\n//                                                         </Col>\r\n//                                                     </Row>\r\n//                                                 </ListGroup.Item>\r\n//                                             )} */}\r\n\r\n\r\n//                                             <ListGroup.Item>\r\n//                                                 <Button\r\n//                                                     // onClick={addToCartHandler}\r\n//                                                     className='btn-block'\r\n//                                                     disabled={product.countInStock == 0}\r\n//                                                     type='button'\r\n//                                                     >\r\n//                                                     Add to Cart\r\n//                                                 </Button>\r\n//                                             </ListGroup.Item>\r\n//                                         </ListGroup>       \r\n//                                     </Card>\r\n//                                 </Col>\r\n//                             </Row>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductScreen\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link , useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match }) {\r\n\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        navigate(`/cart/${id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","// import React from 'react'\r\n// import { Container, Row, Col } from 'react-bootstrap'\r\n\r\n// function FormContainer({ children }) {\r\n//     return (\r\n//         <Container>\r\n//             <Row className=\"justify-content-md-center\">\r\n//                 <Col xs={12} md={6}>\r\n//                     {children}\r\n//                 </Col>\r\n//             </Row>\r\n//         </Container>\r\n//     )\r\n// }\r\n\r\n// export default FormContainer\r\n\r\nimport React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [userInfo, redirect, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link ,useLocation,useNavigate} from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link ,useNavigate} from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const navigate = useNavigate()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy || {})\r\n    const { loading: loadingOrders, error: errorOrders, orders = [] } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt ? order.createdAt.substring(0, 10) : 'N/A'}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? order.paidAt ? order.paidAt.substring(0, 10) : 'N/A' : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link ,useParams,useLocation,useNavigate} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen() {\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const productId = id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    \r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        navigate('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport { useNavigate} from 'react-router-dom'\r\n\r\nfunction PaymentScreen({ history }) {\r\n    const navigate = useNavigate()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useNavigate} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        navigate('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link ,useNavigate} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n    const navigate = useNavigate()\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        navigate('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            navigate(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card , Modal, Form} from 'react-bootstrap'\r\nimport { Link ,useParams} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ history }) {\r\n    const { id } = useParams()\r\n    const orderId = id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n// debut\r\n    const [show, setShow] = useState(false)\r\n    const [numTel, setNumTel] = useState('')\r\n    const [motDePasse, setMotDePasse] = useState('')\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const handleConfirm = () => {\r\n        // Handle confirmation logic here\r\n        console.log('Numéro de téléphone:', numTel)\r\n        console.log('Mot de passe:', motDePasse)\r\n        handleClose()\r\n    }\r\n// fin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                             </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    \r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                        <Col>\r\n                                            <Button onClick={handleShow} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '0', border: 'none', background: 'none' }}>\r\n                                                <Image src=\"images/bankily.png\" style={{ width: '100px', height: '40px' }} />\r\n                                            </Button>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Button style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '0', border: 'none', background: 'none' }}>\r\n                                                <Image src=\"images/bimbank.jfif\" style={{ width: '100px', height: '40px' }} />\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '0', border: 'none', background: 'none' }}>\r\n                                                <Image src=\"images/masrivy.png\" style={{ width: '100px', height: '40px' }} />\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '0', border: 'none', background: 'none' }}>\r\n                                                <Image src=\"images/seddad.png\" style={{ width: '100px', height: '40px' }} />\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '0', border: 'none', background: 'none' }}>\r\n                                                <Image src=\"images/bci.png\" style={{ width: '100px', height: '40px' }} />\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '0', border: 'none', background: 'none' }}>\r\n                                                <Image src=\"images/amanty.webp\" style={{ width: '100px', height: '40px' }} />\r\n                                            </Button>\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {/* debut */}\r\n                                <Modal show={show} onHide={handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Connexion</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form>\r\n                                        <Form.Group controlId=\"formNumTel\">\r\n                                            <Form.Label>Numéro de Téléphone</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Entrez votre numéro de téléphone\"\r\n                                                value={numTel}\r\n                                                onChange={(e) => setNumTel(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formMotDePasse\">\r\n                                            <Form.Label>Mot de Passe</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                placeholder=\"Entrez votre mot de passe\"\r\n                                                value={motDePasse}\r\n                                                onChange={(e) => setMotDePasse(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        Annuler\r\n                                    </Button>\r\n                                    <Button variant=\"primary\" onClick={handleConfirm}>\r\n                                        Confirmer\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                                {/* fin */}\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useNavigate,useLocation} from 'react-router-dom'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    \r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // let keyword = history.location.search\r\n    const keyword = location.search;\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            navigate('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            navigate(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        // navigate\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    const productId = id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            navigate('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                {/* <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File> */}\r\n                                <Form.Control\r\n                                    type='file'\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                />\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link, useNavigate, useParams } from 'react-router-dom';\r\n// import { Form, Button } from 'react-bootstrap';\r\n// import Message from '../components/Message';\r\n// import Loader from '../components/Loader';\r\n// import FormContainer from '../components/FormContainer';\r\n// import { listProductDetails, updateProduct } from '../actions/productActions';\r\n// import { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\n// const ProductEditScreen = () => {\r\n//     const { id: productId } = useParams();\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n\r\n//     const [name, setName] = useState('');\r\n//     const [price, setPrice] = useState(0);\r\n//     const [image, setImage] = useState('');\r\n//     const [brand, setBrand] = useState('');\r\n//     const [category, setCategory] = useState('');\r\n//     const [countInStock, setCountInStock] = useState(0);\r\n//     const [description, setDescription] = useState('');\r\n\r\n//     const productDetails = useSelector((state) => state.productDetails);\r\n//     const { loading, error, product } = productDetails;\r\n\r\n//     const productUpdate = useSelector((state) => state.productUpdate);\r\n//     const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\r\n\r\n//     useEffect(() => {\r\n//         if (successUpdate) {\r\n//             dispatch({ type: PRODUCT_UPDATE_RESET });\r\n//             navigate('/admin/productlist');\r\n//         } else {\r\n//             if (!product.name || product._id !== productId) {\r\n//                 dispatch(listProductDetails(productId));\r\n//             } else {\r\n//                 setName(product.name);\r\n//                 setPrice(product.price);\r\n//                 setImage(product.image);\r\n//                 setBrand(product.brand);\r\n//                 setCategory(product.category);\r\n//                 setCountInStock(product.countInStock);\r\n//                 setDescription(product.description);\r\n//             }\r\n//         }\r\n//     }, [dispatch, navigate, productId, product, successUpdate]);\r\n\r\n//     const submitHandler = (e) => {\r\n//         e.preventDefault();\r\n//         dispatch(updateProduct({\r\n//             _id: productId,\r\n//             name,\r\n//             price,\r\n//             image,\r\n//             brand,\r\n//             category,\r\n//             description,\r\n//             countInStock,\r\n//         }));\r\n//     };\r\n\r\n//     return (\r\n//         <FormContainer>\r\n//             <h1>Edit Product</h1>\r\n//             {loadingUpdate && <Loader />}\r\n//             {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n//             {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n//                 <Form onSubmit={submitHandler}>\r\n//                     <Form.Group controlId='name'>\r\n//                         <Form.Label>Name</Form.Label>\r\n//                         <Form.Control\r\n//                             type='name'\r\n//                             placeholder='Enter name'\r\n//                             value={name}\r\n//                             onChange={(e) => setName(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId='price'>\r\n//                         <Form.Label>Price</Form.Label>\r\n//                         <Form.Control\r\n//                             type='number'\r\n//                             placeholder='Enter price'\r\n//                             value={price}\r\n//                             onChange={(e) => setPrice(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId='image'>\r\n//                         <Form.Label>Image</Form.Label>\r\n//                         <Form.Control\r\n//                             type='text'\r\n//                             placeholder='Enter image URL'\r\n//                             value={image}\r\n//                             onChange={(e) => setImage(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId='brand'>\r\n//                         <Form.Label>Brand</Form.Label>\r\n//                         <Form.Control\r\n//                             type='text'\r\n//                             placeholder='Enter brand'\r\n//                             value={brand}\r\n//                             onChange={(e) => setBrand(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId='category'>\r\n//                         <Form.Label>Category</Form.Label>\r\n//                         <Form.Control\r\n//                             type='text'\r\n//                             placeholder='Enter category'\r\n//                             value={category}\r\n//                             onChange={(e) => setCategory(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId='countInStock'>\r\n//                         <Form.Label>Count In Stock</Form.Label>\r\n//                         <Form.Control\r\n//                             type='number'\r\n//                             placeholder='Enter count in stock'\r\n//                             value={countInStock}\r\n//                             onChange={(e) => setCountInStock(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId='description'>\r\n//                         <Form.Label>Description</Form.Label>\r\n//                         <Form.Control\r\n//                             type='text'\r\n//                             placeholder='Enter description'\r\n//                             value={description}\r\n//                             onChange={(e) => setDescription(e.target.value)}\r\n//                         ></Form.Control>\r\n//                     </Form.Group>\r\n\r\n//                     <Button type='submit' variant='primary'>\r\n//                         Update\r\n//                     </Button>\r\n//                 </Form>\r\n//             )}\r\n//         </FormContainer>\r\n//     );\r\n// };\r\n\r\n// export default ProductEditScreen;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useNavigate} from 'react-router-dom'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            navigate('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import  { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/footer'\nimport HomeScreen from './screens/HomeScreen'\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport React from 'react';\nimport ProductScreen from './screens/ProductScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen' \nimport CartScreen from './screens/CartScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Header/>\n            <main className='py-3'> \n              <Container> \n                  <Routes>\n                          <Route path='/' element={<HomeScreen/>} exact />\n                          <Route path='/login' element={<LoginScreen/>} />\n                          <Route path='/register' element={<RegisterScreen/>} />\n                          <Route path='/profile' element={<ProfileScreen/>} />\n                          <Route path='/cart/:id?' element={<CartScreen/>} />\n                          <Route path='/payment' element={<PaymentScreen/>} />\n                          <Route path='/product/:id' element={<ProductScreen/>} />\n\n                          <Route path='/login/shipping' element={<ShippingScreen/>} />\n                          <Route path='/placeorder' element={<PlaceOrderScreen/>} />\n                          <Route path='/order/:id' element={<OrderScreen/>} />\n                          <Route path='/admin/userlist' element={<UserListScreen/>} />\n                          <Route path='/admin/user/:id/edit' element={<UserEditScreen/>} />\n                          <Route path='/admin/productlist' element={<ProductListScreen/>} />\n                          <Route path='/admin/product/:id/edit' element={<ProductEditScreen />} />\n                          <Route path='/admin/orderlist' element={<OrderListScreen/>} />\n                  </Routes>\n              </Container>\n            </main>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { thunk } from 'redux-thunk'; // Correcting to a named import\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'; // Ensure this path is correct\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}